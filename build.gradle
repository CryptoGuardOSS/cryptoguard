apply plugin: "java"
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

group = groupName
version = versionNumber

task updateVersion {
    Properties props = new Properties()
    InputStream ins = new FileInputStream(file("gradle.properties"))
    props.load(ins)

    ant.replaceregexp(
            match:'V[0-9]{2}[.][0-9]{2}[.][0-9]{2}',
            replace:props.getProperty("versionNumber"),
            flags:'g',
            byline:true) {

        fileset(
                dir: '.',
                includes: '*.rst'
        )
        fileset(
                dir: '.',
                includes: 'Makefile'
        )
        fileset(
                dir: '.',
                includes: 'pom.xml'
        )
    }
}

build.dependsOn(updateVersion)

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        failOnVersionConflict()
    }
}

configurations {
    xsd2java
}

//Only Run this command to re-generate the schema files
task xsd2java() {
    ext {
        scarfPackage = 'com.example.response'
        scarfSchema = 'src/main/resources/Scarf/Scarf.xsd'
    }

    System.setProperty('javax.xml.accessExternalSchema', 'all')

    doLast {
        file("src/main/java").mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xsd2java.asPath)
        ant.jaxbTargetDir = file("src/main")

        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: scarfPackage,
                schema: scarfSchema
        ) {
            //arg(value: "-Xannotate")
        }
    }
}

task prepscarfXMLForRelease << {
    //Heavily Hard Coded, removes the namespace so the xml output doesn't have a namespace : nmls
    ant.replace(file: "src/main/java/com/example/response/package-info.java", token: "namespace = \"https://www.swamp.com/com/scarf/struct\", ", value: "")
}


jar {

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes(
                'Main-Class': 'frontEnd.Interface.EntryPoint'
        )
    }
}

//Ensuring all of the processors are being used for tests
test {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

//A Task for specifying explicit release commands
task release {

    //Orders the tasks for release
    def tasks = [clean, prepscarfXMLForRelease, test, build]
    for (int itr = 0; itr < tasks.size() - 1; itr++) {
        tasks[itr + 1].mustRunAfter(tasks[itr])
    }

    //This task calls the previous tasks in order
    dependsOn(tasks)

    //This will now move the built jar to the current directory under the new name
    doLast {
        Properties props = new Properties()
        InputStream ins = new FileInputStream(file("gradle.properties"))
        props.load(ins)

        copy {
            from "build/libs/" + props.getProperty("projectName") + "-" + props.getProperty("version") + ".jar"
            into '.'
            rename {
                String fileName -> props.getProperty("projectName") + ".jar"
            }
        }

        ins.close()
        ant.replace(file: "src/main/java/com/example/response/package-info.java", token: "(elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)", value: "(namespace = \"https://www.swamp.com/com/scarf/struct\", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)")

    }
}

javadoc {
    exclude "com/example/response/**"
}

dependencies {
    compile name: 'soot-trunk'
    compile "org.codehaus.groovy:groovy:2.5.2"
    xsd2java "com.sun.xml.bind:jaxb-xjc:2.2.6"
    xsd2java "com.sun.xml.bind:jaxb-impl:2.2.6"
    compile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile 'commons-cli:commons-cli:1.4'
    implementation 'org.mockito:mockito-core:2.24.5'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.8'
}